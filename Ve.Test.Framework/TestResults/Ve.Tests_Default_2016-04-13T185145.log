VS filter: testpath:TestAssembly:Ve.Tests/Feature:Quantity+and+price+of+the+shopping+cart+items/Scenario:Increase+quantity+of+products+-+Basket+reflects+the+updated+quantity+and+price
Discovering target: Default
Discovering tests from assembly: c:\users\raluca.nanea\documents\visual studio 2013\Projects\Ve.Test.Framework\Ve.Tests\bin\Debug\Ve.Tests.dll
Appdomain Disposed
Test Suite Dump
#0: Ve.Tests/Default - 
#1: Default - 
#2: Ve.Tests - 
#3: Quantity and price of the shopping cart items - 
#5: Increase quantity of products - Basket reflects the updated quantity and price - TestAssembly:Ve.Tests/Feature:Quantity+and+price+of+the+shopping+cart+items/Scenario:Increase+quantity+of+products+-+Basket+reflects+the+updated+quantity+and+price
End: Test Suite Dump -- X
Scheduler: considering #5 for thread #0
Scheduler: using #5 for thread #0
Test #5 is scheduled for thread #0
Thread #0: creating new test thread executor for Ve.Tests, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null (target: Default)
Loading SpecRun type 'TechTalk.SpecRun.Framework.TestAssemblyExecutor' from: C:\Users\raluca.nanea\AppData\Local\Temp\VisualStudioTestExplorerExtensions\SpecRun.Runner.1.3.0\tools\TechTalk.SpecRun.Framework.Executor.dll
Test #5/0 is started on thread #0
B:Given I navigate to Clerkenwell website
T:done: BasketSteps.GivenINavigateToClerkenwellWebsite() (6.9s)
B:And I navigate further to a product page
T:done: BasketSteps.GivenINavigateFurtherToAProductPage() (5.1s)
B:When I add the current product to the basket
T:done: BasketSteps.WhenIAddTheCurrentProductToTheBasket() (2.7s)
B:When I increase the quantity of the existing product
T:done: BasketSteps.WhenIIncreaseTheQuantityOfTheExistingProduct() (11.5s)
B:Then the basket is updated with the correct quantity and price
T:done: BasketSteps.ThenTheBasketIsUpdatedWithTheCorrectQuantityAndPrice() (1.6s)
Test #5 is finished on thread #0 as Succeeded within 37.0885147 seconds
Appdomain Disposed
Total: 1
Succeeded: 1
Ignored: 0
Pending: 0
Skipped: 0
Failed: 0
